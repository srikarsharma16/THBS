2. POST -  Add new patient

https://todearhemant.pythonanywhere.com/patient/api/patients/

Request Body -

{ “name": “Mukti”, "age": 7, "gender": “female”}
//////////////////////////////////////////////////////////////////////////////////////////
fetch("https://todearhemant.pythonanywhere.com/patient/api/patients/")
    .then(response=>response.json())
    .then(data=>{
        //console.log(data)
        this.setState({patients:data})
    })
    .catch(err=>{
      alert("Something Wrong !")
    })

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import React from 'react'
class App extends React.Component
{
    constructor()
    {
      super()
      this.intervalObj = undefined
      this.state = {
          title : "Good Morning",
          num : 25,
          cities : [
            "Delhi" , "Bhopal" , "Pune" , "Raipur" , "Indore"
          ]
      }
    }
    startIncrement = ()=>{
      this.intervalObj = setInterval(()=>
          {
            this.setState({num : this.state.num+5})
          },100);
    }
    stopIncrement = ()=>{
          clearInterval(this.intervalObj)
          this.setState({num : 0})
    }
    change = ()=>{
        console.log(this.state)
        //this.state.title = "Good Evening"
        this.setState({title:"Good Evening"})
        console.log(this.state)
    }
    addCity = ()=>{
      var city = document.getElementById('t1').value;
      this.setState({cities : [...this.state.cities,city] })
    }    
    render()
    {    
      console.log("Render Run ...... ")
      return <div>
          <h1>My first ReactJS Component</h1>
          <b>{this.state.title} : {this.state.num}</b>
          <br/>      
          <button onClick={this.change}>Change Title</button>  
          &nbsp;
          <button onClick={this.startIncrement}>Start</button>
          &nbsp;
          <button onClick={this.stopIncrement}>Stop</button>
          <hr/>
         
          <input type="text" id="t1" placeholder='New City'/>&nbsp;
          <button onClick={this.addCity}>Add New City</button>
          <ul>
            {this.state.cities.map((ct)=>
            {
              return <li>{ct}</li>
            })}
          </ul>
      </div>
    }
}
export default App;

////////////////////////////////////////////////////////////////////
import React from 'react'
class App extends React.Component
{
    constructor()
    {
      super()
      this.state = {
          title : "Good Morning",
          num : 25
      }
    }
    startIncrement = ()=>{
          setInterval(()=>
          {
            this.setState({num : this.state.num+5})
          },100);
    }
    change = ()=>{
        console.log(this.state)
        //this.state.title = "Good Evening"
        this.setState({title:"Good Evening"})
        console.log(this.state)
    }
   
    render()
    {    
      console.log("Render Run ...... ")
      return <div>
          <h1>My first ReactJS Component</h1>
          <b>{this.state.title} : {this.state.num}</b>
          <br/>      
          <button onClick={this.change}>Change Title</button>  
          &nbsp;
          <button onClick={this.startIncrement}>Start</button>
      </div>
    }
}
export default App;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
https://www.free-css.com/free-css-templates/page269/virtual-folio         
          
          mongodb+srv://root:<password>@cluster0.olwvc.mongodb.net/myFirstDatabase?retryWrites=true&w=majority
           spring.data.mongodb.uri=+srv://root:Root@123@cluster0.olwvc.mongodb.net/myFirstDatabase?retryWrites=true&w=majority
           <dependency>
                <groupId>it.ozimov</groupId>
                <artifactId>spring-boot-email-core</artifactId>
                <version>0.6.3</version>
            </dependency>  


@Autowired
    public EmailService emailService;
    @GetMapping("/send")
    public String sendEmail() throws AddressException{
       final Email email = DefaultEmail.builder()
            .from(new InternetAddress("aaryan14032006@mail.com"))
            .to(Lists.newArrayList(new InternetAddress("aryankumar14032006@gmail.com")))
            .subject("Test Mail")
            .body("meow meow")
            .encoding("UTF-8").build();
   
            try {
                emailService.send(email);
                return "meow sent!";
            } catch(Exception e) {
                return e.getMessage();
            }
       
    }


function fun1()
{
    console.log("Fun1 Executed !")
    console.log("Good Morning !")
}
function hello(ob) // High Order Function
{    
    return function()
    {
        console.log("Alechmy Solution !")
        ob()
        console.log("Hello everyone !")
    }
}

var stud1 = {
    roll : 101,
    name : 'vikas',
    age : 27,
    marks : {
        phy : 56,
        che : 44,
        math  : 67
    }
}
var stud2 = {
    ...stud1,
    marks : {
        ...stud1.marks
    }
}
console.log(stud1)
stud2.marks.che = 100
console.log(stud1)


var arr = [33,44,21,32,56,54,21,77,48]
// create new array from older array but i want to change
// all odd number (num*10) all even number (num*5)
// var arr2 = []
// for(let num of arr)
// {
//    if(num%2==0)
//     arr2.push(num*5)
//    else
//     arr2.push(num*10)
// }
// function changeArray(num)
// {
//     if(num%2==0)
//         return num*5
//     else
//         return num*10  
// }
// var arr2 = arr.map(changeArray)
var arr2 = arr.map((num)=>num%2==0?num*5:num*10)
console.log(arr)
console.log(arr2)

/////////////////////////////////////////

var arr = [33,44,21,32,56,54,21,77,48]
// Fetch all even numbers and store in a new array
// var arr2 = []
// for(let num of arr)
// {
//     if(num%2==0)
//     {
//         arr2.push(num)
//     }
// }
// function filterEven(num)
// {
//     return num%2==0    
// }
// var arr2 = arr.filter(filterEven)
var arr2 = arr.filter((num)=>num%2==0)
console.log(arr)
console.log(arr2)

//////////////////////////////////////////////////////////////////////////////////////
constructor

class Demo
{
    constructor(a=0,b=0)
    {
        this.a = a
        this.b = b
    }
    show(){
        console.log("A : " , this.a, " B : ", this.b)
    }
}
class Sample extends Demo
{
    constructor(x=0,y=0,a=0,b=0)
    {
        super(a,b)
        this.x = x
        this.y = y
    }
    show(){
        super.show()
        console.log("X : " , this.x, " Y : ", this.y)
    }
}
//var ob = new Sample(44,33,22,66)
//var ob = new Sample(44,33,22)
//var ob = new Sample(44,33)
//var ob = new Sample(44)
var ob = new Sample()
ob.show()


//////////////////////////////////////////////////////////////////////////////////////////////
class Student
{
    constructor(roll,name,age)
    {
        this.roll = roll
        this.name = name
        this.age = age
    }
    show(){
        console.log(this.roll, this.name , this.age)
    }
}
class CS extends Student
{
    constructor(roll,name,age,marks)
    {
        super(roll,name,age)
        this.marks = marks
    }
    show(){
        super.show()
        console.log(this.marks)
    }
}
class IT extends Student
{
    constructor(roll,name,age,marks)
    {
        super(roll,name,age)
        this.marks = marks
    }
    show(){
        super.show()
        console.log(this.marks)
    }
}
var ob1 = new CS(101,"Vikas",25,{aws:56,ml:76,db:58})
var ob2 = new IT(102,"Gopal",21,{net:55,cloud:76,db:76})
var ob3 = new CS(103,"Vijay",25,{aws:56,ml:76,db:76})
var ob4 = new IT(104,"Meena",22,{net:35,cloud:44,db:76})
var ob5 = new CS(105,"Pooja",27,{aws:56,ml:76,db:76})
var ob6 = new CS(106,"Aakash",24,{aws:56,ml:76,db:76})
var ob7 = new IT(107,"Reena",26,{net:87,cloud:66,db:76})
var arr = [ob1,ob2,ob3,ob4,ob5,ob6,ob7]
function getPercentage(obj)
{
    var marks = obj.marks
    var data = Object.values(marks)
   
    var total = data.reduce((a,b)=>{
        //console.log(a,b)
        return a+b;
    },0);
    //console.log(total)
    var per = total/3;
    return per  
}
var num = 65;
var arr2 = arr.filter((ob)=>getPercentage(ob)>num)
console.log(arr2)

//////////////////////////////////////////////////////////////////////////////

class Student
{
    constructor(roll,name,age)
    {
        this.roll = roll
        this.name = name
        this.age = age
    }
    show(){
        console.log(this.roll, this.name , this.age)
    }
}
class CS extends Student
{
    constructor(roll,name,age,marks)
    {
        super(roll,name,age)
        this.marks = marks
    }
    show(){
        super.show()
        console.log(this.marks)
    }
}
class IT extends Student
{
    constructor(roll,name,age,marks)
    {
        super(roll,name,age)
        this.marks = marks
    }
    show(){
        super.show()
        console.log(this.marks)
    }
}
var ob1 = new CS(101,"Vikas",25,{aws:56,ml:76,db:58})
var ob2 = new IT(102,"Gopal",21,{net:55,cloud:76,db:76})
var ob3 = new CS(103,"Vijay",25,{aws:56,ml:76,db:76})
var ob4 = new IT(104,"Meena",22,{net:35,cloud:44,db:76})
var ob5 = new CS(105,"Pooja",27,{aws:56,ml:76,db:76})
var ob6 = new CS(106,"Aakash",24,{aws:56,ml:76,db:76})
var ob7 = new IT(107,"Reena",26,{net:87,cloud:66,db:76})
var arr = [ob1,ob2,ob3,ob4,ob5,ob6,ob7]
var num = 65;
var arr2 = arr.filter((ob)=>((obj)=>
{
    var marks = obj.marks
    var data = Object.values(marks)
   
    var total = data.reduce((a,b)=>{
        //console.log(a,b)
        return a+b;
    },0);
    //console.log(total)
    var per = total/3;
    return per
})(ob)>num)
console.log(arr2)

/////////////////////////////////////////////////////////////////////////////////////

https://drive.google.com/drive/folders/1jDMHxZFBmM0SIN8b9pzI67peuCkIUJ71?usp=sharing
//////////////////////////////////////////////////////////////////////////////////////



export default class Third extends React.Component
{
    render()
    {
        return <div>
            <h2>Third Component</h2>
        </div>
    }
}
